Index: src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.java
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.java b/src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.java
deleted file mode 100644
--- a/src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.java	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
+++ /dev/null	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
@@ -1,74 +0,0 @@
-package br.com.pedrelosa.campoMinado.visao;
-
-import br.com.pedrelosa.campoMinado.excecao.ExplosaoException;
-import br.com.pedrelosa.campoMinado.excecao.SairException;
-import br.com.pedrelosa.campoMinado.imports.EntradaESaidaGrafico;
-import br.com.pedrelosa.campoMinado.modelo.Tabuleiro;
-
-import javax.swing.*;
-
-public class TabuleiroConsole {
-	private Tabuleiro tabuleiro;
-	
-	public TabuleiroConsole(Tabuleiro tabuleiro) {
-		this.tabuleiro = tabuleiro;
-		
-		execultarJogo();
-		
-	}
-	
-	private void execultarJogo() {
-		try{
-			boolean continuar = true;
-			
-			while (continuar){
-				
-				cicloDoJogo();
-				
-				String resposta = EntradaESaidaGrafico.converssaoString("Outra partida? (S/n) ",
-						"S", "s", "n", "N" );
-				
-				if ("n".equalsIgnoreCase(resposta)){
-					continuar = false;
-				}else{
-					this.tabuleiro.reiniciar();
-				}
-				
-			}
-			
-		}catch (SairException e){
-			JOptionPane.showMessageDialog(null, "Tchau!!");
-		}
-	}
-	
-	private void cicloDoJogo() {
-		try {
-			
-			while (!this.tabuleiro.objetivoAlcancado()){
-				JOptionPane.showMessageDialog(null, this.tabuleiro);
-				
-				int linha = EntradaESaidaGrafico.converssaoInt(0, this.tabuleiro.getLinhas(), this.tabuleiro + "\n digite o valor de linha:");
-				int coluna = EntradaESaidaGrafico.converssaoInt(0, this.tabuleiro.getColunas(), this.tabuleiro + "\n digite o valor de coluna:");
-				
-				String opcaoEscolhida = EntradaESaidaGrafico.converssaoString(this.tabuleiro.toStringSelecionado(linha, coluna) +
-						"\nQual operação deseja fazer:\n"+
-						"Abrir - 1\n"+
-						"Marcar ou desmarcar - 2\n", "1", "2");
-				
-				if ("1".equals(opcaoEscolhida)){
-					this.tabuleiro.abrir(linha, coluna);
-				} else if ("2".equals(opcaoEscolhida)) {
-					this.tabuleiro.alternarMarcacao(linha, coluna);
-				}
-				
-				
-			}
-			JOptionPane.showMessageDialog(null, this.tabuleiro);
-			JOptionPane.showMessageDialog(null, "Você ganhou!!!");
-		}catch (ExplosaoException e){
-			JOptionPane.showMessageDialog(null, this.tabuleiro);
-			JOptionPane.showMessageDialog(null, "Você perdeu!");
-		}
-	}
-	
-}
Index: src/br/com/pedrelosa/campoMinado/modelo/Campo.java
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/modelo/Campo.java b/src/br/com/pedrelosa/campoMinado/modelo/Campo.java
deleted file mode 100644
--- a/src/br/com/pedrelosa/campoMinado/modelo/Campo.java	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
+++ /dev/null	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
@@ -1,137 +0,0 @@
-package br.com.pedrelosa.campoMinado.modelo;
-
-import br.com.pedrelosa.campoMinado.excecao.ExplosaoException;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class Campo {
-	
-	private final int x;
-	private final int y;
-	
-	private boolean minado;
-	private boolean aberto;
-	private boolean marcado;
-	
-	private List<Campo> vizinhos = new ArrayList<>();
-	
-	public Campo(int x, int y) {
-		this.x = x;
-		this.y = y;
-	}
-	
-	public boolean adicionarVizinho(Campo vizinho) {
-		
-		boolean xIsDif = this.x != vizinho.x;
-		boolean yIsDif = this.y != vizinho.y;
-		boolean diagonalIsDif = xIsDif && yIsDif;
-		
-		int deltaX = Math.abs(this.x - vizinho.x);
-		int deltaY = Math.abs(this.y - vizinho.y);
-		int deltaAll = deltaX + deltaY;
-		
-		if (deltaAll == 1 && ! diagonalIsDif) {
-			this.vizinhos.add(vizinho);
-			return true;
-		} else if (deltaAll == 2 && diagonalIsDif) {
-			this.vizinhos.add(vizinho);
-			return true;
-		} else {
-			return false;
-		}
-		
-	}
-	
-	public void alternarMarcacao(){
-		if (!this.aberto){
-			this.marcado = !this.marcado;
-			
-		}
-	}
-	
-	public boolean abrir(){
-		if (!this.aberto && !this.marcado){
-			this.aberto = true;
-			
-			if (this.minado){
-				throw new ExplosaoException();
-			}
-			
-			if (vizinhancaSegura()){
-				this.vizinhos.forEach(Campo::abrir);
-			}
-			
-			return true;
-		}else {
-			return false;
-		}
-		
-	}
-	
-	public int getX() {
-		return x;
-	}
-	
-	public int getY() {
-		return y;
-	}
-	
-	public boolean vizinhancaSegura() {
-		return this.vizinhos.stream().noneMatch(v -> v.minado);
-	}
-	
-	public boolean isMarcado() {
-		return this.marcado;
-	}
-	
-	void setAberto(boolean aberto) {
-		this.aberto = aberto;
-	}
-	
-	public boolean isAberto() {
-		return this.aberto;
-	}
-	
-	public boolean isMinado() {
-		return this.minado;
-	}
-	
-	boolean objetivoAlcancado() {
-		boolean desvendado = ! this.minado && this.aberto;
-		boolean protegido = this.minado && this.marcado;
-		return desvendado || protegido;
-	}
-	
-	void minar(){
-		if (!this.isMinado()){
-			this.minado = true;
-		}
-	}
-	
-	long minasNaVizinhanca() {
-		return this.vizinhos.stream().filter(v -> v.minado).count();
-	}
-	
-	void reiniciar(){
-		this.aberto = false;
-		this.minado = false;
-		this.aberto = false;
-	}
-	
-	@Override
-	public String toString(){
-		if(this.isMarcado()){
-			return "x";
-		} else if (this.isAberto() && this.isMinado()) {
-			return "*";
-		} else if (this.isAberto() && this.minasNaVizinhanca() > 0) {
-			return Long.toString(this.minasNaVizinhanca());
-		} else if (this.isAberto()) {
-			return " ";
-		} else {
-			return "?";
-		}
-	}
-	
-}
\ No newline at end of file
Index: src/br/com/pedrelosa/campoMinado/excecao/ExplosaoException.java
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/excecao/ExplosaoException.java b/src/br/com/pedrelosa/campoMinado/excecao/ExplosaoException.java
deleted file mode 100644
--- a/src/br/com/pedrelosa/campoMinado/excecao/ExplosaoException.java	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
+++ /dev/null	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
@@ -1,7 +0,0 @@
-package br.com.pedrelosa.campoMinado.excecao;
-
-public class ExplosaoException extends RuntimeException{
-
-
-
-}
Index: src/br/com/pedrelosa/campoMinado/excecao/SairException.java
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/excecao/SairException.java b/src/br/com/pedrelosa/campoMinado/excecao/SairException.java
deleted file mode 100644
--- a/src/br/com/pedrelosa/campoMinado/excecao/SairException.java	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
+++ /dev/null	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
@@ -1,7 +0,0 @@
-package br.com.pedrelosa.campoMinado.excecao;
-
-public class SairException extends RuntimeException{
-
-
-
-}
Index: src/Main.java
===================================================================
diff --git a/src/Main.java b/src/Main.java
deleted file mode 100644
--- a/src/Main.java	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
+++ /dev/null	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
@@ -1,5 +0,0 @@
-public class Main {
-	public static void main(String[] args) {
-		System.out.println("Hello world!");
-	}
-}
\ No newline at end of file
Index: src/br/com/pedrelosa/campoMinado/Aplicacao.java
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/Aplicacao.java b/src/br/com/pedrelosa/campoMinado/Aplicacao.java
deleted file mode 100644
--- a/src/br/com/pedrelosa/campoMinado/Aplicacao.java	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
+++ /dev/null	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
@@ -1,13 +0,0 @@
-package br.com.pedrelosa.campoMinado;
-
-import br.com.pedrelosa.campoMinado.modelo.Tabuleiro;
-import br.com.pedrelosa.campoMinado.visao.TabuleiroConsole;
-
-public class Aplicacao {
-	public static void main(String[] args) {
-		Tabuleiro tabuleiro = new Tabuleiro(6,6,6);
-		
-		new TabuleiroConsole(tabuleiro);
-		
-	}
-}
Index: src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.java
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.java b/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.java
deleted file mode 100644
--- a/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.java	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
+++ /dev/null	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
@@ -1,168 +0,0 @@
-package br.com.pedrelosa.campoMinado.modelo;
-
-import br.com.pedrelosa.campoMinado.excecao.ExplosaoException;
-
-import java.util.ArrayList;
-import java.util.List;
-import java.util.function.Predicate;
-
-public class Tabuleiro {
-	private int linhas;
-	private int colunas;
-	
-	private int minas;
-	private final List<Campo> campos = new ArrayList<>();
-	
-	public Tabuleiro(int linhas, int colunas, int minas) {
-		this.linhas = linhas;
-		this.colunas = colunas;
-		this.minas = minas;
-		
-		gerarCampos();
-		associarVizinhos();
-		sortearMinas();
-	}
-	
-	public void abrir(int linha, int coluna) {
-		try {
-			this.campos.parallelStream()
-					.filter(c -> c.getX() == linha
-							&& c.getY() == coluna)
-					.findFirst()
-					.ifPresent(Campo::abrir);
-		} catch (ExplosaoException e) {
-			this.campos.forEach(c -> c.setAberto(true));
-			throw e;
-		}
-	}
-	
-	public void alternarMarcacao(int linha, int coluna) {
-		this.campos.parallelStream()
-				.filter(c -> c.getX() == linha
-						&& c.getY() == coluna)
-				.findFirst()
-				.ifPresent(Campo::alternarMarcacao);
-	}
-	
-	private void gerarCampos() {
-		for (int linhas = 0; linhas < this.linhas; linhas++) {
-			for (int colunas = 0; colunas < this.colunas; colunas++) {
-				this.campos.add(new Campo(linhas, colunas));
-			}
-		}
-	}
-	
-	private void associarVizinhos() {
-		for (Campo c1 :
-				campos) {
-			for (Campo c2 :
-					campos) {
-				c1.adicionarVizinho(c2);
-			}
-		}
-	}
-	
-	private void sortearMinas() {
-		
-		Predicate<Campo> minado = campo -> campo.isMinado();
-		int aleatorio;
-		
-		for (long minasArmadas = 0; minasArmadas < this.minas; minasArmadas++) {
-			aleatorio = (int) (Math.random() * this.campos.size());
-			this.campos.get(aleatorio).minar();
-			minasArmadas = this.campos.stream().filter(Campo::isMinado).count();
-		}
-	}
-	
-	public boolean objetivoAlcancado() {
-		return this.campos.stream().allMatch(Campo::objetivoAlcancado);
-	}
-	
-	public void reiniciar() {
-		this.campos.forEach(Campo::reiniciar);
-		this.sortearMinas();
-	}
-	
-	public int getLinhas() {
-		return linhas;
-	}
-	
-	public int getColunas() {
-		return colunas;
-	}
-	
-	public String toStringSelecionado(int x, int y) {
-		StringBuilder stringBuilder = new StringBuilder();
-		
-		stringBuilder.append("   ");
-		for (int coluna = 0; coluna < this.colunas; coluna++) {
-			stringBuilder.append(" ");
-			stringBuilder.append(coluna);
-			stringBuilder.append(" ");
-		}
-		
-		stringBuilder.append("\n");
-		
-		
-		int i = 0;
-		for (int linha = 0; linha < this.linhas; linha++) {
-			
-			stringBuilder.append(linha);
-			stringBuilder.append(" ");
-			
-			for (int coluna = 0; coluna < this.colunas; coluna++) {
-				
-				if (linha == x && coluna == y) {
-					stringBuilder.append("[");
-					stringBuilder.append(this.campos.get(i));
-					stringBuilder.append("]");
-				} else {
-					stringBuilder.append(" ");
-					stringBuilder.append(this.campos.get(i));
-					stringBuilder.append(" ");
-				}
-				i++;
-			}
-			
-			stringBuilder.append('\n');
-			
-		}
-		
-		return stringBuilder.toString();
-	}
-	
-	@Override
-	public String toString() {
-		StringBuilder stringBuilder = new StringBuilder();
-		
-		stringBuilder.append("   ");
-		for (int coluna = 0; coluna < this.colunas; coluna++) {
-			stringBuilder.append(" ");
-			stringBuilder.append(coluna);
-			stringBuilder.append(" ");
-		}
-		
-		stringBuilder.append("\n");
-		
-		int i = 0;
-		for (int linha = 0; linha < this.linhas; linha++) {
-			
-			stringBuilder.append(linha);
-			stringBuilder.append(" ");
-			
-			for (int coluna = 0; coluna < this.colunas; coluna++) {
-				
-				stringBuilder.append(" ");
-				stringBuilder.append(this.campos.get(i));
-				stringBuilder.append(" ");
-				
-				i++;
-			}
-			
-			stringBuilder.append('\n');
-			
-		}
-		
-		return stringBuilder.toString();
-	}
-}
Index: src/br/com/pedrelosa/campoMinado/excecao/SairException.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/excecao/SairException.kt b/src/br/com/pedrelosa/campoMinado/excecao/SairException.kt
new file mode 100644
--- /dev/null	(date 1675311515270)
+++ b/src/br/com/pedrelosa/campoMinado/excecao/SairException.kt	(date 1675311515270)
@@ -0,0 +1,3 @@
+package br.com.pedrelosa.campoMinado.excecao
+
+class SairException : RuntimeException()
\ No newline at end of file
Index: .idea/kotlinc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/kotlinc.xml b/.idea/kotlinc.xml
new file mode 100644
--- /dev/null	(date 1675311417429)
+++ b/.idea/kotlinc.xml	(date 1675311417429)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Kotlin2JvmCompilerArguments">
+    <option name="jvmTarget" value="1.8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/libraries/KotlinJavaRuntime.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/KotlinJavaRuntime.xml b/.idea/libraries/KotlinJavaRuntime.xml
new file mode 100644
--- /dev/null	(date 1675311417420)
+++ b/.idea/libraries/KotlinJavaRuntime.xml	(date 1675311417420)
@@ -0,0 +1,26 @@
+<component name="libraryTable">
+  <library name="KotlinJavaRuntime" type="repository">
+    <properties maven-id="org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0" />
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.8.0/kotlin-stdlib-jdk8-1.8.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib/1.8.0/kotlin-stdlib-1.8.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-common/1.8.0/kotlin-stdlib-common-1.8.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/annotations/13.0/annotations-13.0.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-jdk7/1.8.0/kotlin-stdlib-jdk7-1.8.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.8.0/kotlin-stdlib-jdk8-1.8.0-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib/1.8.0/kotlin-stdlib-1.8.0-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-common/1.8.0/kotlin-stdlib-common-1.8.0-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/annotations/13.0/annotations-13.0-javadoc.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-jdk7/1.8.0/kotlin-stdlib-jdk7-1.8.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-jdk8/1.8.0/kotlin-stdlib-jdk8-1.8.0-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib/1.8.0/kotlin-stdlib-1.8.0-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-common/1.8.0/kotlin-stdlib-common-1.8.0-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/annotations/13.0/annotations-13.0-sources.jar!/" />
+      <root url="jar://$MAVEN_REPOSITORY$/org/jetbrains/kotlin/kotlin-stdlib-jdk7/1.8.0/kotlin-stdlib-jdk7-1.8.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/br/com/pedrelosa/campoMinado/imports/EntradaESaidaGrafico.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/imports/EntradaESaidaGrafico.java b/src/br/com/pedrelosa/campoMinado/imports/EntradaESaidaGrafico.kt
rename from src/br/com/pedrelosa/campoMinado/imports/EntradaESaidaGrafico.java
rename to src/br/com/pedrelosa/campoMinado/imports/EntradaESaidaGrafico.kt
--- a/src/br/com/pedrelosa/campoMinado/imports/EntradaESaidaGrafico.java	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
+++ b/src/br/com/pedrelosa/campoMinado/imports/EntradaESaidaGrafico.kt	(date 1675311515289)
@@ -1,83 +1,75 @@
-package br.com.pedrelosa.campoMinado.imports;
+package br.com.pedrelosa.campoMinado.imports
 
-import javax.swing.JOptionPane;
+import javax.swing.JOptionPane
 
 /**
  * Essa é alguns métodos que eu criei em uma aula que tive há um tempo
  */
-public class EntradaESaidaGrafico {
-
+object EntradaESaidaGrafico {
     /**
-     * Imprime um <code>JOptionPane</code> na tela e retorna o resultado em <code>int</code>
+     * Imprime um `JOptionPane` na tela e retorna o resultado em `int`
      *
      * @param min Significa o valor mínimo aceitavel pela função
      * @param max Significa o valor máximo aceitavel pela função
      * @param texto Significa a mensagem que vai ser impressa ne tela
      * @return o que foi digitado pelo usuário
      */
-    public static int converssaoInt(int min, int max, String texto) {
-        int x = 0;
-        boolean itsOk = false;
-        String y = "valor inicial";
+    fun converssaoInt(min: Int, max: Int, texto: String?): Int {
+        var x = 0
+        var itsOk = false
+        var y: String? = "valor inicial"
         while (!itsOk) {
             try {
-                y = JOptionPane.showInputDialog(texto);
-                x = Integer.parseInt(y);
+                y = JOptionPane.showInputDialog(texto)
+                x = y.toInt()
                 if (x <= max && x >= min) {
-                    itsOk = true;
+                    itsOk = true
                 } else {
                     JOptionPane.showMessageDialog(null,
-                            "O valor digitado está fora dos parametros normais!! Tente novamente");
+                            "O valor digitado está fora dos parametros normais!! Tente novamente")
                 }
-            } catch (NumberFormatException a) {
-
+            } catch (a: NumberFormatException) {
                 if (y == null) {
-                    System.exit(0);
+                    System.exit(0)
                 } else {
-                    JOptionPane.showMessageDialog(null, "Você digitou errado!! Tente novamente");
+                    JOptionPane.showMessageDialog(null, "Você digitou errado!! Tente novamente")
                 }
-
             }
         }
-
-        return x;
+        return x
     }
 
     /**
-     * Imprime um <code>JOptionPane</code> na tela e retorna o resultado em <code>double</code>
+     * Imprime um `JOptionPane` na tela e retorna o resultado em `double`
      *
      * @param min Significa o valor mínimo aceito pela função
      * @param max Significa o valor máximo aceito pela função
      * @param texto Significa a mensagem que vai ser impressa ne tela
      * @return o que foi digitado pelo usuário
      */
-    public static double converssaoDouble(double min, double max, String texto) {
-        double x = 0;
-        boolean itsok = false;
-        String y = "valor inicial";
+    fun converssaoDouble(min: Double, max: Double, texto: String?): Double {
+        var x = 0.0
+        var itsok = false
+        var y: String? = "valor inicial"
         while (!itsok) {
             try {
-                y = JOptionPane.showInputDialog(texto);
-                x = Double.parseDouble(y);
+                y = JOptionPane.showInputDialog(texto)
+                x = y.toDouble()
                 if (x <= max && x >= min) {
-                    itsok = true;
+                    itsok = true
                 } else {
                     JOptionPane.showMessageDialog(null,
-                            "O valor digitado está fora dos parametros normais!! Tente novamente");
+                            "O valor digitado está fora dos parametros normais!! Tente novamente")
                 }
-            } catch (NumberFormatException a) {
-
+            } catch (a: NumberFormatException) {
                 if (y == null) {
-                    System.exit(0);
+                    System.exit(0)
                 } else {
-                    JOptionPane.showMessageDialog(null, "Você digitou errado!! Tente novamente");
+                    JOptionPane.showMessageDialog(null, "Você digitou errado!! Tente novamente")
                 }
-
             }
         }
-
-        return x;
-
+        return x
     }
 
     /**
@@ -86,40 +78,31 @@
      * @param opcoesaceitaveis Significa as opções que serão aceitáveis como resposta
      * @return a String que foi digitada pelo usuário
      */
-    public static String converssaoString(String texto, String... opcoesaceitaveis) {
-
-        boolean escreveuCerto = false;
-        String stringRecebida = "valor inicial";
-        String retorno = "";
-
+    fun converssaoString(texto: String?, vararg opcoesaceitaveis: String): String? {
+        var escreveuCerto = false
+        var stringRecebida: String? = "valor inicial"
+        var retorno: String? = ""
         while (!escreveuCerto) {
             try {
-                stringRecebida = JOptionPane.showInputDialog(texto);
-
-                for (String s : opcoesaceitaveis) {
-
-                    if (stringRecebida.equals(s)) {
-                        retorno = stringRecebida;
-                        escreveuCerto = true;
-                        break;
+                stringRecebida = JOptionPane.showInputDialog(texto)
+                for (s in opcoesaceitaveis) {
+                    if (stringRecebida == s) {
+                        retorno = stringRecebida
+                        escreveuCerto = true
+                        break
                     }
-
                 }
-
                 if (!escreveuCerto) {
-                    JOptionPane.showMessageDialog(null, "Você digitou errado!! Tente novamente");
+                    JOptionPane.showMessageDialog(null, "Você digitou errado!! Tente novamente")
                 }
-
-            } catch (Exception e) {
+            } catch (e: Exception) {
                 if (stringRecebida == null) {
-                    System.exit(0);
+                    System.exit(0)
                 } else {
-                    JOptionPane.showMessageDialog(null, "Você digitou errado!! Tente novamente");
+                    JOptionPane.showMessageDialog(null, "Você digitou errado!! Tente novamente")
                 }
             }
         }
-
-        return retorno;
+        return retorno
     }
-
-}
+}
\ No newline at end of file
Index: src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.kt b/src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.kt
new file mode 100644
--- /dev/null	(date 1675311452895)
+++ b/src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.kt	(date 1675311452895)
@@ -0,0 +1,60 @@
+package br.com.pedrelosa.campoMinado.visao
+
+import br.com.pedrelosa.campoMinado.excecao.ExplosaoException
+import br.com.pedrelosa.campoMinado.excecao.SairException
+import br.com.pedrelosa.campoMinado.imports.EntradaESaidaGrafico
+import br.com.pedrelosa.campoMinado.modelo.Tabuleiro
+import javax.swing.JOptionPane
+
+class TabuleiroConsole(private val tabuleiro: Tabuleiro) {
+    init {
+        execultarJogo()
+    }
+
+    private fun execultarJogo() {
+        try {
+            var continuar = true
+            while (continuar) {
+                cicloDoJogo()
+                val resposta = EntradaESaidaGrafico.converssaoString("Outra partida? (S/n) ",
+                        "S", "s", "n", "N")
+                if ("n".equals(resposta, ignoreCase = true)) {
+                    continuar = false
+                } else {
+                    tabuleiro.reiniciar()
+                }
+            }
+        } catch (e: SairException) {
+            JOptionPane.showMessageDialog(null, "Tchau!!")
+        }
+    }
+
+    private fun cicloDoJogo() {
+        try {
+            while (!tabuleiro.objetivoAlcancado()) {
+                JOptionPane.showMessageDialog(null, tabuleiro)
+                val linha = EntradaESaidaGrafico.converssaoInt(0, tabuleiro.linhas, """${tabuleiro}
+ digite o valor de linha:""")
+                val coluna = EntradaESaidaGrafico.converssaoInt(0, tabuleiro.colunas, """${tabuleiro}
+ digite o valor de coluna:""")
+                val opcaoEscolhida = EntradaESaidaGrafico.converssaoString("""
+    ${tabuleiro.toStringSelecionado(linha, coluna)}
+    Qual operação deseja fazer:
+    Abrir - 1
+    Marcar ou desmarcar - 2
+    
+    """.trimIndent(), "1", "2")
+                if ("1" == opcaoEscolhida) {
+                    tabuleiro.abrir(linha, coluna)
+                } else if ("2" == opcaoEscolhida) {
+                    tabuleiro.alternarMarcacao(linha, coluna)
+                }
+            }
+            JOptionPane.showMessageDialog(null, tabuleiro)
+            JOptionPane.showMessageDialog(null, "Você ganhou!!!")
+        } catch (e: ExplosaoException) {
+            JOptionPane.showMessageDialog(null, tabuleiro)
+            JOptionPane.showMessageDialog(null, "Você perdeu!")
+        }
+    }
+}
\ No newline at end of file
Index: src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.kt b/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.kt
new file mode 100644
--- /dev/null	(date 1675311515308)
+++ b/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.kt	(date 1675311515308)
@@ -0,0 +1,131 @@
+package br.com.pedrelosa.campoMinado.modelo
+
+import br.com.pedrelosa.campoMinado.excecao.ExplosaoException
+import java.util.function.Consumer
+import java.util.function.Predicate
+
+class Tabuleiro(val linhas: Int, val colunas: Int, private val minas: Int) {
+    private val campos: MutableList<Campo> = ArrayList()
+
+    init {
+        gerarCampos()
+        associarVizinhos()
+        sortearMinas()
+    }
+
+    fun abrir(linha: Int, coluna: Int) {
+        try {
+            campos.parallelStream()
+                    .filter { c: Campo ->
+                        (c.x == linha
+                                && c.y == coluna)
+                    }
+                    .findFirst()
+                    .ifPresent { obj: Campo -> obj.abrir() }
+        } catch (e: ExplosaoException) {
+            campos.forEach(Consumer { c: Campo -> c.isAberto = true })
+            throw e
+        }
+    }
+
+    fun alternarMarcacao(linha: Int, coluna: Int) {
+        campos.parallelStream()
+                .filter { c: Campo ->
+                    (c.x == linha
+                            && c.y == coluna)
+                }
+                .findFirst()
+                .ifPresent { obj: Campo -> obj.alternarMarcacao() }
+    }
+
+    private fun gerarCampos() {
+        for (linhas in 0 until linhas) {
+            for (colunas in 0 until colunas) {
+                campos.add(Campo(linhas, colunas))
+            }
+        }
+    }
+
+    private fun associarVizinhos() {
+        for (c1 in campos) {
+            for (c2 in campos) {
+                c1.adicionarVizinho(c2)
+            }
+        }
+    }
+
+    private fun sortearMinas() {
+        val minado = Predicate { campo: Campo -> campo.isMinado }
+        var aleatorio: Int
+        var minasArmadas: Long = 0
+        while (minasArmadas < minas) {
+            aleatorio = (Math.random() * campos.size).toInt()
+            campos[aleatorio].minar()
+            minasArmadas = campos.stream().filter { obj: Campo -> obj.isMinado }.count()
+            minasArmadas++
+        }
+    }
+
+    fun objetivoAlcancado(): Boolean {
+        return campos.stream().allMatch { obj: Campo -> obj.objetivoAlcancado() }
+    }
+
+    fun reiniciar() {
+        campos.forEach(Consumer { obj: Campo -> obj.reiniciar() })
+        sortearMinas()
+    }
+
+    fun toStringSelecionado(x: Int, y: Int): String {
+        val stringBuilder = StringBuilder()
+        stringBuilder.append("   ")
+        for (coluna in 0 until colunas) {
+            stringBuilder.append(" ")
+            stringBuilder.append(coluna)
+            stringBuilder.append(" ")
+        }
+        stringBuilder.append("\n")
+        var i = 0
+        for (linha in 0 until linhas) {
+            stringBuilder.append(linha)
+            stringBuilder.append(" ")
+            for (coluna in 0 until colunas) {
+                if (linha == x && coluna == y) {
+                    stringBuilder.append("[")
+                    stringBuilder.append(campos[i])
+                    stringBuilder.append("]")
+                } else {
+                    stringBuilder.append(" ")
+                    stringBuilder.append(campos[i])
+                    stringBuilder.append(" ")
+                }
+                i++
+            }
+            stringBuilder.append('\n')
+        }
+        return stringBuilder.toString()
+    }
+
+    override fun toString(): String {
+        val stringBuilder = StringBuilder()
+        stringBuilder.append("   ")
+        for (coluna in 0 until colunas) {
+            stringBuilder.append(" ")
+            stringBuilder.append(coluna)
+            stringBuilder.append(" ")
+        }
+        stringBuilder.append("\n")
+        var i = 0
+        for (linha in 0 until linhas) {
+            stringBuilder.append(linha)
+            stringBuilder.append(" ")
+            for (coluna in 0 until colunas) {
+                stringBuilder.append(" ")
+                stringBuilder.append(campos[i])
+                stringBuilder.append(" ")
+                i++
+            }
+            stringBuilder.append('\n')
+        }
+        return stringBuilder.toString()
+    }
+}
\ No newline at end of file
Index: .idea/artifacts/primeiro_projeto_campo_minado_java_jar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/artifacts/primeiro_projeto_campo_minado_java_jar.xml b/.idea/artifacts/primeiro_projeto_campo_minado_java_jar.xml
new file mode 100644
--- /dev/null	(date 1675310021148)
+++ b/.idea/artifacts/primeiro_projeto_campo_minado_java_jar.xml	(date 1675310021148)
@@ -0,0 +1,8 @@
+<component name="ArtifactManager">
+  <artifact type="jar" name="primeiro-projeto-campo-minado-java:jar">
+    <output-path>$PROJECT_DIR$/out/artifacts/primeiro_projeto_campo_minado_java_jar</output-path>
+    <root id="archive" name="primeiro-projeto-campo-minado-java.jar">
+      <element id="module-output" name="primeiro-projeto-campo-minado-java" />
+    </root>
+  </artifact>
+</component>
\ No newline at end of file
Index: src/br/com/pedrelosa/campoMinado/excecao/ExplosaoException.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/excecao/ExplosaoException.kt b/src/br/com/pedrelosa/campoMinado/excecao/ExplosaoException.kt
new file mode 100644
--- /dev/null	(date 1675311515279)
+++ b/src/br/com/pedrelosa/campoMinado/excecao/ExplosaoException.kt	(date 1675311515279)
@@ -0,0 +1,3 @@
+package br.com.pedrelosa.campoMinado.excecao
+
+class ExplosaoException : RuntimeException()
\ No newline at end of file
Index: src/br/com/pedrelosa/campoMinado/modelo/Campo.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/modelo/Campo.kt b/src/br/com/pedrelosa/campoMinado/modelo/Campo.kt
new file mode 100644
--- /dev/null	(date 1675311515298)
+++ b/src/br/com/pedrelosa/campoMinado/modelo/Campo.kt	(date 1675311515298)
@@ -0,0 +1,91 @@
+package br.com.pedrelosa.campoMinado.modelo
+
+import br.com.pedrelosa.campoMinado.excecao.ExplosaoException
+import java.util.function.Consumer
+
+class Campo(val x: Int, val y: Int) {
+    var isMinado = false
+        private set
+    var isAberto = false
+    var isMarcado = false
+        private set
+    private val vizinhos: MutableList<Campo> = ArrayList()
+    fun adicionarVizinho(vizinho: Campo): Boolean {
+        val xIsDif = x != vizinho.x
+        val yIsDif = y != vizinho.y
+        val diagonalIsDif = xIsDif && yIsDif
+        val deltaX = Math.abs(x - vizinho.x)
+        val deltaY = Math.abs(y - vizinho.y)
+        val deltaAll = deltaX + deltaY
+        return if (deltaAll == 1 && !diagonalIsDif) {
+            vizinhos.add(vizinho)
+            true
+        } else if (deltaAll == 2 && diagonalIsDif) {
+            vizinhos.add(vizinho)
+            true
+        } else {
+            false
+        }
+    }
+
+    fun alternarMarcacao() {
+        if (!isAberto) {
+            isMarcado = !isMarcado
+        }
+    }
+
+    fun abrir(): Boolean {
+        return if (!isAberto && !isMarcado) {
+            isAberto = true
+            if (isMinado) {
+                throw ExplosaoException()
+            }
+            if (vizinhancaSegura()) {
+                vizinhos.forEach(Consumer { obj: Campo -> obj.abrir() })
+            }
+            true
+        } else {
+            false
+        }
+    }
+
+    fun vizinhancaSegura(): Boolean {
+        return vizinhos.stream().noneMatch { v: Campo -> v.isMinado }
+    }
+
+    fun objetivoAlcancado(): Boolean {
+        val desvendado = !isMinado && isAberto
+        val protegido = isMinado && isMarcado
+        return desvendado || protegido
+    }
+
+    fun minar() {
+        if (!isMinado) {
+            isMinado = true
+        }
+    }
+
+    fun minasNaVizinhanca(): Long {
+        return vizinhos.stream().filter { v: Campo -> v.isMinado }.count()
+    }
+
+    fun reiniciar() {
+        isAberto = false
+        isMinado = false
+        isAberto = false
+    }
+
+    override fun toString(): String {
+        return if (isMarcado) {
+            "x"
+        } else if (isAberto && isMinado) {
+            "*"
+        } else if (isAberto && minasNaVizinhanca() > 0) {
+            java.lang.Long.toString(minasNaVizinhanca())
+        } else if (isAberto) {
+            " "
+        } else {
+            "?"
+        }
+    }
+}
\ No newline at end of file
Index: primeiro-projeto-campo-minado-java.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/src\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/test\" isTestSource=\"true\" />\r\n    </content>\r\n    <orderEntry type=\"inheritedJdk\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"module-library\" scope=\"TEST\">\r\n      <library name=\"JUnit4\">\r\n        <CLASSES>\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/junit/junit/4.13.1/junit-4.13.1.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar!/\" />\r\n        </CLASSES>\r\n        <JAVADOC />\r\n        <SOURCES />\r\n      </library>\r\n    </orderEntry>\r\n    <orderEntry type=\"module-library\" scope=\"TEST\">\r\n      <library name=\"JUnit5.8.1\">\r\n        <CLASSES>\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.1/junit-jupiter-5.8.1.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.1/junit-jupiter-params-5.8.1.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1.jar!/\" />\r\n          <root url=\"jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1.jar!/\" />\r\n        </CLASSES>\r\n        <JAVADOC />\r\n        <SOURCES />\r\n      </library>\r\n    </orderEntry>\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/primeiro-projeto-campo-minado-java.iml b/primeiro-projeto-campo-minado-java.iml
--- a/primeiro-projeto-campo-minado-java.iml	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
+++ b/primeiro-projeto-campo-minado-java.iml	(date 1675311417408)
@@ -34,5 +34,6 @@
         <SOURCES />
       </library>
     </orderEntry>
+    <orderEntry type="library" name="KotlinJavaRuntime" level="project" />
   </component>
 </module>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"85abbfb2-dd66-46b6-b5cf-6b7b2e690d9d\" name=\"Changes\" comment=\"-feat atualizações do dia 31/01/23\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/Aplicacao.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/excecao/SairException.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/imports/EntradaESaidaGrafico.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Campo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Campo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/test/testes/CampoTest.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/test/testes/CampoTest.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"PUSH_AUTO_UPDATE\" value=\"true\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2L6OTR0qkBMoWKT21IgglEMa8Ut\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Downloaded.Files.Path.Enabled\": \"false\",\r\n    \"Repository.Attach.Annotations\": \"false\",\r\n    \"Repository.Attach.JavaDocs\": \"false\",\r\n    \"Repository.Attach.Sources\": \"false\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary\": \"JUnit5\",\r\n    \"com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5\": \"\",\r\n    \"create.test.in.the.same.root\": \"true\",\r\n    \"jdk.selected.JAVA_MODULE\": \"19\",\r\n    \"last_opened_file_path\": \"C:/Users/pedre/IdeaProjects/primeiro-projeto-campo-minado-java/src/br/com/pedrelosa/campoMinado/imports\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"project.structure.last.edited\": \"Project\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.2\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\pedre\\IdeaProjects\\primeiro-projeto-campo-minado-java\\src\\br\\com\\pedrelosa\\campoMinado\\imports\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"testes\" />\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Aplicacao\">\r\n    <configuration name=\"Aplicacao\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"br.com.pedrelosa.campoMinado.Aplicacao\" />\r\n      <module name=\"primeiro-projeto-campo-minado-java\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"br.com.pedrelosa.campoMinado.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CampoTest (1)\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"primeiro-projeto-campo-minado-java\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"testes.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"testes\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"testes.CampoTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CampoTest.testeAlternarMarcacao\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"primeiro-projeto-campo-minado-java\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"testes.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"testes\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"testes.CampoTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"testeAlternarMarcacao\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CampoTest.testeAlternarMarcado\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"primeiro-projeto-campo-minado-java\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"testes.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"testes\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"testes.CampoTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"testeAlternarMarcado\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"CampoTest.testePadraoAtributoMarcado\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"primeiro-projeto-campo-minado-java\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"testes.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"testes\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"testes.CampoTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"testePadraoAtributoMarcado\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Aplicacao\" />\r\n        <item itemvalue=\"JUnit.CampoTest (1)\" />\r\n        <item itemvalue=\"JUnit.CampoTest.testePadraoAtributoMarcado\" />\r\n        <item itemvalue=\"JUnit.CampoTest.testeAlternarMarcado\" />\r\n        <item itemvalue=\"JUnit.CampoTest.testeAlternarMarcacao\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"85abbfb2-dd66-46b6-b5cf-6b7b2e690d9d\" name=\"Changes\" comment=\"\" />\r\n      <created>1675188074744</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1675188074744</updated>\r\n      <workItem from=\"1675188075843\" duration=\"9869000\" />\r\n      <workItem from=\"1675292626831\" duration=\"14254000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"-feat atualizações do dia 31/01/23\">\r\n      <created>1675199263230</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1675199263230</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"-feat atualizações do dia 31/01/23\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"-feat atualizações do dia 31/01/23\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 2a2754d65fec82072504478fe4134b5f11878ab9)
+++ b/.idea/workspace.xml	(date 1675311615019)
@@ -1,19 +1,34 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="ArtifactsWorkspaceSettings">
+    <artifacts-to-build>
+      <artifact name="primeiro-projeto-campo-minado-java:jar" />
+    </artifacts-to-build>
+  </component>
   <component name="AutoImportSettings">
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="85abbfb2-dd66-46b6-b5cf-6b7b2e690d9d" name="Changes" comment="-feat atualizações do dia 31/01/23">
-      <change afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/Aplicacao.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/excecao/SairException.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/imports/EntradaESaidaGrafico.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+    <list default="true" id="85abbfb2-dd66-46b6-b5cf-6b7b2e690d9d" name="Changes" comment="-feat atualizações do dia 01/02/23">
+      <change afterPath="$PROJECT_DIR$/.idea/artifacts/primeiro_projeto_campo_minado_java_jar.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/kotlinc.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/KotlinJavaRuntime.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/Aplicacao.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/excecao/ExplosaoException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/excecao/SairException.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Campo.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.kt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.kt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Campo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Campo.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/test/testes/CampoTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/test/testes/CampoTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/primeiro-projeto-campo-minado-java.iml" beforeDir="false" afterPath="$PROJECT_DIR$/primeiro-projeto-campo-minado-java.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/Aplicacao.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/excecao/ExplosaoException.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/excecao/SairException.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/imports/EntradaESaidaGrafico.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/imports/EntradaESaidaGrafico.kt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Campo.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/modelo/Tabuleiro.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/br/com/pedrelosa/campoMinado/visao/TabuleiroConsole.java" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -54,12 +69,12 @@
     "com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5": "",
     "create.test.in.the.same.root": "true",
     "jdk.selected.JAVA_MODULE": "19",
-    "last_opened_file_path": "C:/Users/pedre/IdeaProjects/primeiro-projeto-campo-minado-java/src/br/com/pedrelosa/campoMinado/imports",
+    "last_opened_file_path": "C:/Users/pedre/Documents/java",
     "node.js.detected.package.eslint": "true",
     "node.js.detected.package.tslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
     "node.js.selected.package.tslint": "(autodetect)",
-    "project.structure.last.edited": "Project",
+    "project.structure.last.edited": "Artifacts",
     "project.structure.proportion": "0.15",
     "project.structure.side.proportion": "0.2",
     "vue.rearranger.settings.migration": "true"
@@ -173,7 +188,7 @@
       <option name="presentableId" value="Default" />
       <updated>1675188074744</updated>
       <workItem from="1675188075843" duration="9869000" />
-      <workItem from="1675292626831" duration="14254000" />
+      <workItem from="1675292626831" duration="16553000" />
     </task>
     <task id="LOCAL-00001" summary="-feat atualizações do dia 31/01/23">
       <created>1675199263230</created>
@@ -182,7 +197,14 @@
       <option name="project" value="LOCAL" />
       <updated>1675199263230</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="-feat atualizações do dia 01/02/23">
+      <created>1675309025392</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1675309025392</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -201,6 +223,7 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="-feat atualizações do dia 31/01/23" />
-    <option name="LAST_COMMIT_MESSAGE" value="-feat atualizações do dia 31/01/23" />
+    <MESSAGE value="-feat atualizações do dia 01/02/23" />
+    <option name="LAST_COMMIT_MESSAGE" value="-feat atualizações do dia 01/02/23" />
   </component>
 </project>
\ No newline at end of file
Index: src/br/com/pedrelosa/campoMinado/Aplicacao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/br/com/pedrelosa/campoMinado/Aplicacao.kt b/src/br/com/pedrelosa/campoMinado/Aplicacao.kt
new file mode 100644
--- /dev/null	(date 1675311515317)
+++ b/src/br/com/pedrelosa/campoMinado/Aplicacao.kt	(date 1675311515317)
@@ -0,0 +1,12 @@
+package br.com.pedrelosa.campoMinado
+
+import br.com.pedrelosa.campoMinado.modelo.Tabuleiro
+import br.com.pedrelosa.campoMinado.visao.TabuleiroConsole
+
+object Aplicacao {
+    @JvmStatic
+    fun main(args: Array<String>) {
+        val tabuleiro = Tabuleiro(6, 6, 6)
+        TabuleiroConsole(tabuleiro)
+    }
+}
\ No newline at end of file
